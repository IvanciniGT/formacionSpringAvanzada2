<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.animalitos</groupId>
  <artifactId>animalitos-servicio</artifactId>
  <version>0.0.1</version>
  <name>Servicio para la gestión de animalitos</name>
  
  
  <properties>
	  <maven.compiler.source>1.8</maven.compiler.source>
	  <maven.compiler.target>1.8</maven.compiler.target>
	  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
		<!-- Lombok, que me permite metyer getters, setters... y más en automático -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.28</version>
		    <scope>provided</scope>
		</dependency>		
		<!-- MapStruct es una libreria que nos permite genertar cómodamente mapeadores -->
		<dependency>
		    <groupId>org.mapstruct</groupId>
		    <artifactId>mapstruct</artifactId>
		    <version>1.5.5.Final</version>
		</dependency>
		<!-- Añado dependencia al proyecto de ENTIDADES DE ANIMALITOS -->
		<dependency>
		    <groupId>com.animalitos</groupId>
		    <artifactId>animalitos-entidades</artifactId>
		    <version>0.0.1</version>
		</dependency>
		<!-- Añado dependencia al proyecto de SERVICIO DE EMAILS -->
		<dependency>
		    <groupId>com.animalitos</groupId>
		    <artifactId>email-servicio</artifactId>
		    <version>0.0.1</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-test</artifactId>
		    <version>2.7.15</version>
		    <scope>test</scope> <!-- solo para las pruebas -->
		</dependency>
		<!--
		 Base de datos con persistencia en Memoria, ideal para pruebas
		Y es brutal.. porque tiene integración directa con Spring.
		Si no he configurado una BBDD real en Spring, pero Spring detecta que tengo disponible en el classpath una bbdd H2, 
		la arranca y se configura para trabajar directamente contra ella 
		-->
		<dependency>
			<groupId>com.h2database</groupId>
		    <artifactId>h2</artifactId>
		    <version>2.2.224</version>
		    <scope>test</scope>
		</dependency>
	 </dependencies>


    <build>
        <plugins>
            <!-- Actualizamos el plugin surefire, que es el que sabe interpretar pruebas de Junit5...
            las versiones más antiguas solo detectan pruebas con JUnit 4 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>1.5.5.Final</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.28</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
        
    </build>
  
</project>